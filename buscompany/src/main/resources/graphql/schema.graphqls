type Query{
    healthCheck: String
    getSettings: ConfigDtoResponse
    getBuses: GetBusesResponse
    getClients: GetClientsResponse
    getUser: UserDto
    getUserByLogin(login: String): UserDto
    getTrips(id: ID): GetTripsResponse
    getCitiesByFromStation(fromStation: String): GetCitiesResponse
    getCitiesByToStation(toStation: String): GetCitiesResponse
    getOrders:GetOrderResponse
    getFreePlaces(id: ID): GetFreePlaceResponse
    getTripById(id: ID): GetTripResponse
}

type Mutation{
    registerClient(request: RegisterClientDtoRequest):RegisterClientDtoResponse
    updateClient(request: UpdateClientDtoRequest,token: String): UpdateClientDtoResponse

    registerAdmin(request: RegisterAdminDtoRequest): RegisterAdminDtoResponse
    updateAdmin(id: ID,request: UpdateAdminDtoRequest):UpdateAdminDtoResponse

    clear: Int

    choosePlace(request: ChoosePlaceRequest): ChoosePlaceResponse
    choosePlaces(request: ChoosePlacesRequest): ChoosePlacesResponse


    createOrder(request: CreateOrderRequest): CreateOrderResponse
    deleteOrder(id: ID): Int

    login(loginDto: LoginDto): LoginDtoResponse
    deleteUser(id: Int): Int

    addBus(busDto: AddBusDtoRequest): Int
    addTrip(request: AddTripRequest): AddTripResponse
    approvedTrip(id: ID): ApprovedTripResponse
    updateTrip(id: ID,request:UpdateTripDtoRequest):UpdateTripDtoResponse
    deleteTrip(id: ID): Int

}
